console.log('This site was generated by Hugo.');




window.addEventListener('load', function() {

//prodUrl = productId.split("cart=");
//console.log(prodUrl);
prodId = document.getElementById("productId").textContent;
console.log(prodId);
const url = 'https://pirathonreports.containerize.app/woocommerce/gcv/product/'+ prodId;

const headers = new Headers();
//headers.append('Authorization', 'Basic ' + btoa(consumerKey + ':' + consumerSecret));

const requestOptions = {
  method: 'GET',
  headers: headers,
  redirect: 'follow'
};

fetch(url, requestOptions)
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    // Extract specific property "stock_status"
    const stockStatus = data.in_stock;
    const price = data.price;
    console.log('Stock Status:', stockStatus, price);

    // Generate HTML based on stock status
    let html;
    if (stockStatus ) {
      html = `<h4>$${price} <sup>/ bottle</sup></h4>` +
      `<a class="btn btn-warning btn-lg" href="https://purchase.gaeliccemeteryvineyard.com/?add-to-cart=${prodId}">` +
      `<em class="fa fa-shopping-cart">&nbsp;</em> Buy Now</a>`;
    } else {
      html = '<a class="btn btn-warning btn-lg" href="https://purchase.gaeliccemeteryvineyard.com/">' +
             '<em class="fa fa-shopping-cart">&nbsp;</em> Sold Out</a>';
    }

    // Set the generated HTML in the button1 div
    document.getElementById('buttonContainer').innerHTML = html;
  })
  .catch(error => {
    console.error('There was a problem with the fetch operation:', error);
  });

})


window.addEventListener('load', function() {

//prodUrl = productId.split("cart=");
//console.log(prodUrl);
prodId = document.getElementById("productId").textContent;
console.log(prodId);
const url = 'https://pirathonreports.containerize.app/woocommerce/gcv/product/'+ prodId;

const headers = new Headers();
//headers.append('Authorization', 'Basic ' + btoa(consumerKey + ':' + consumerSecret));

const requestOptions = {
  method: 'GET',
  headers: headers,
  redirect: 'follow'
};

fetch(url, requestOptions)
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    // Extract specific property "stock_status"
    const stockStatus = data.in_stock;
    const price = data.price;
    console.log('Stock Status:', stockStatus, price);

    // Generate HTML based on stock status
    let html;
    if (stockStatus ) {
      html = `<h4>$${price} <sup>/ bottle</sup></h4>` +
      `<a class="btn btn-warning btn-lg" href="https://purchase.gaeliccemeteryvineyard.com/?add-to-cart=${prodId}">` +
      `<em class="fa fa-shopping-cart">&nbsp;</em> Buy Now</a>`;
    } else {
      html = '<a class="btn btn-warning btn-lg" href="https://purchase.gaeliccemeteryvineyard.com/">' +
             '<em class="fa fa-shopping-cart">&nbsp;</em> Sold Out</a>';
    }

    // Set the generated HTML in the button1 div
    document.getElementById('buttonContainer').innerHTML = html;
  })
  .catch(error => {
    console.error('There was a problem with the fetch operation:', error);
  });

})

